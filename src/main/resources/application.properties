#环境配置dev,prod
spring.profiles.active=dev
application.message=webssh
spring.mvc.favicon.enabled=false
#logging.config=classpath:logback-dev.xml
#-----------------------------
server.port=8888
server.session-timeout=# session timeout in seconds
# the context path, defaults to '/'
server.servlet.context-path=/
# the servlet path, defaults to '/'
server.servlet.path=/
#======================================================================
#=           thymeleaf相关配置参数(ThymeleafAutoConfiguration)          =
#======================================================================
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
spring.thymeleaf.servlet.content-type=text/html
# set to false for hot refresh
spring.thymeleaf.cache=false 
#--------------------------------INTERNATIONALIZATION (MessageSourceAutoConfiguration)
spring.messages.basename=messages
spring.messages.cache-duration=-1
spring.messages.encoding=UTF-8

#-------------------------------- JMX
spring.jmx.enabled=true
#======================================================================
#=                              security                              =
#======================================================================
spring.security.user.name=shish
spring.security.user.password=shish

#======================================================================
#=                               mybatis                              =
#======================================================================
mybatis.mapper-locations=classpath:mapper/*.xml
#扫描pojo类的位置,在此处指明扫描实体类的包，在mapper中就可以不用写pojo类的全路径名了
mybatis.type-aliases-package=com.meteorice.devilfish.pojo

#可以通过mybatis.config-location属性来指定mybatis的配置文件的位置，
#mybatis.config-location=classpath:mybatis-config.xml
#======================================================================
#=                               mysql                                =
#======================================================================
spring.datasource.druid.initial-size=1
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=1
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=20000 
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

spring.datasource.druid.validation-query=SELECT 'x'
#spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#======================================================================
#=                         打开Druid的监控统计功能                      =
#======================================================================
spring.datasource.druid.filters=stat
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=false
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=admin
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
spring.datasource.druid.web-stat-filter.profile-enable=true
#======================================================================
#=                       使用Druid的内置监控页面                        =
#=       展示Druid的统计信息,StatViewServlet的用途包括：                 =
#=       1.提供监控信息展示的html页面 2.提供监控信息的JSON API            =
#======================================================================
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
#根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：
#http://110.76.43.235:9000/druid/index.html
#http://110.76.43.235:8080/mini-web/druid/index.html
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
#StatViewSerlvet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数
#deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问
#配置的格式
#<IP>
#或者<IP>/<SUB_NET_MASK_size>其中128.242.127.1/24
#24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配,不支持IPV6。
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#spring.datasource.druid.stat-view-servlet.deny=128.242.127.1/24,128.242.128.1

#======================================================================
#=                                日志                                =
#======================================================================
logging.level.root=warn
