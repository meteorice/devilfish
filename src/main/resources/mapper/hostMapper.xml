<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.meteorice.devilfish.dao.HostMapper">

    <resultMap id="host" type="com.meteorice.devilfish.pojo.Host">
        <id column="nodeid" property="key"/>
        <result column="nodepid" property="pid"/>
        <result column="hostip" property="ip"/>
        <result column="sshport" property="port"/>
        <result column="nodedesc" property="title"/>
        <result column="nodetype" property="type"/>
    </resultMap>

    <resultMap id="hostConfig" type="com.meteorice.devilfish.pojo.HostConfig">
        <id column="ruleid" property="ruleid"/>
        <result column="matchstr" property="matchstr"/>
        <result column="loginname" property="loginname"/>
        <result column="loginpwd" property="loginpwd"/>
        <result column="timeout" property="timeout"/>
    </resultMap>

    <!-- 根据ID查询数据 -->
    <select id="getTreeNode" parameterType="int" resultMap="host">
        select * from t_host where nodepid = #{pid}
    </select>

    <select id="getHost" parameterType="String" resultMap="host">
        select * from t_host where hostip = #{hostip}
    </select>

    <select id="getAuth" parameterType="String" resultMap="hostConfig">
        select * from t_host_config_rule where matchstr = #{ip}
    </select>

    <select id="getHostConfig" parameterType="String" resultMap="hostConfig">
        SELECT
        CASE
            WHEN
                matchstr = #{ip} THEN
                    10000 ELSE ruleid
                END ruleid,
            timeout,
            matchstr,
            loginname,
            loginpwd
        FROM
            t_host_config_rule
        WHERE #{ip} REGEXP matchstr
        ORDER BY ruleid DESC
    </select>

    <insert id="sshLog" parameterType="map">
        insert into t_ssh_log (sshtime,fieldyear,fieldmonth,ddate,dtime,username,hostinfo)
        values (#{sshtime},#{fieldyear},#{fieldmonth},#{ddate},#{dtime},#{username},#{hostinfo})
    </insert>

    <select id="getSshLog" parameterType="String" resultType="map">
        select fieldyear,fieldmonth,ddate,count(1) times from t_ssh_log where fieldyear = #{fieldyear}
        group by fieldyear,fieldmonth,ddate
    </select>

    <select id="getSshLogDetail" parameterType="String" resultType="map">
        select t.time,count(1) times from (
          select date_format(sshtime, '%H') time from t_ssh_log where ddate = #{date}
        ) t group by time order by time
    </select>

    <select id="getHostCount" resultType="int">
        select count(1) count from t_host where nodetype = 1
    </select>

</mapper>